name: Release EvalSense
run-name: Release EvalSense v${{ inputs.version }} (${{ inputs.type }})
on:
  workflow_dispatch:
    inputs:
      type:
        description: "Release type"
        required: true
        type: choice
        options:
          - test
          - production
        default: test
      version:
        description: "Release version"
        required: true
        type: string
      description:
        description: "Release description"
        required: false
        type: string
        default: ""

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: 0.7.3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - name: Verify version
        env:
          INPUT_VERSION: ${{ inputs.version }}
        run: python3 scripts/check_version.py
      - name: Update CHANGELOG.md
        id: update_changelog
        if: ${{ inputs.type == 'production' }}
        env:
          RELEASE_VERSION: ${{ inputs.version }}
          RELEASE_DESCRIPTION: ${{ inputs.description }}
        run: python3 scripts/update_changelog.py
      - name: "Commit changes to CHANGELOG.md"
        if: ${{ inputs.type == 'production' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update CHANGELOG.md for v${{ inputs.version }}"
          git push
      - name: Build project
        run: uv build
      - name: Publish to TestPyPI
        if: ${{ inputs.type == 'test' }}
        run: uv publish --index testpypi --trusted-publishing always
      - name: Publish to PyPI
        if: ${{ inputs.type == 'production' }}
        run: uv publish --trusted-publishing always
      - name: Create/update git tag
        if: ${{ inputs.type == 'production' }}
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ inputs.version }}';
            const tagName = `v${version}`;

            const data = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${tagName}`,
              sha: context.sha,
            };

            try {
              await github.rest.git.createRef(data);
              console.log(`Tag ${tagName} created successfully.`);
            } catch (error) {
              if (error.status === 422) {
                console.log(`Tag ${tagName} already exists. Updating...`);
                await github.rest.git.updateRef({
                  ...data,
                  ref: `tags/${tagName}`
                });
              }
            }
      - name: Create draft GitHub release
        if: ${{ inputs.type == 'production' }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create "v${{ inputs.version }}"\
            --repo "$GITHUB_REPOSITORY" \
            --title "v${{ inputs.version }}" \
            --notes "${{ steps.update_changelog.outputs.release_notes }}" \
            --draft
      - name: Upload release artifacts
        if: ${{ inputs.type == 'production' }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload "v${{ inputs.version }}" dist/** \
            --repo "$GITHUB_REPOSITORY" \
